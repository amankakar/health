{"version":3,"file":"static/development/pages/doctor.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/AppointmentRow.js","webpack:///./components/HeaderDoctor.js","webpack:///./components/doctorLayout.js","webpack:///./ethereum/web3.js","webpack:///./pages/doctor/index.js","webpack:///./pages/ipfs.js","webpack:///./routes.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"ipfs-api\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"truffle-contract\"","webpack:///external \"web3\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React, { Component } from \"react\";\nimport { Table } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\n\nclass AppointmentRow extends Component {\n  onAppointmentComplete = () => {\n    if (appointment.hash) return true;\n    else return false;\n  };\n  render() {\n    const { Row, Cell } = Table;\n    const { appointment } = this.props;\n    const hash = appointment.hash;\n    return (\n      <Row positive={appointment.completed} disabled={!appointment.completed}>\n        <Cell>{appointment.appointmentId.toNumber()}</Cell>\n        <Cell>{appointment.patientId.toNumber()}</Cell>\n        <Cell>{appointment.doctorId.toNumber()}</Cell>\n        <Cell>{appointment.date}</Cell>\n        <Cell>{appointment.chiefComplaint}</Cell>\n        <Cell>\n          <Link route={`patient/record/${hash}`}>\n            <a>{hash}</a>\n          </Link>\n        </Cell>\n      </Row>\n    );\n  }\n}\nexport default AppointmentRow;\n","import React from \"react\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nexport default () => {\n  return (\n    <Menu style={{ marginTop: 10 }}>\n      <Link route=\"../\">\n        <a className=\"item\">Health Care Management System</a>\n      </Link>\n      <Link route=\"/doctor\">\n        <a className=\"item\"> doctor </a>\n      </Link>\n    </Menu>\n  );\n};\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport Head from \"next/head\";\nimport Header from \"./HeaderDoctor\";\n\nexport default props => {\n  return (\n    <Container>\n      <Head>\n        <link\n          rel=\"stylesheet\"\n          href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.0/dist/semantic.min.css\"\n        />\n        <link\n          href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\n          rel=\"stylesheet\"\n        />\n      </Head>\n      <Header />\n      {props.children}\n    </Container>\n  );\n};\n","import Web3 from \"web3\";\n\nlet web3;\n\nif (typeof window !== \"undefined\" && typeof window.web3 !== \"undefined\") {\n  //we are in browser and metamask is running\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  //we are on the server OR user is not running metamask\n  const provider = new Web3.providers.HttpProvider(\"http://localhost:8545\");\n\n  web3 = new Web3(provider);\n}\n\nexport default web3;\n","import React, { Component } from \"react\";\nimport Layout from \"../../components/doctorLayout\";\nimport web3 from \"../../ethereum/web3\";\nimport Factory from \"../../build/contracts/ReceptionsitFactory.json\";\nimport Doctor from \"../../build/contracts/Doctor.json\";\nimport Patient from \"../../build/contracts/Patient.json\";\nimport AppointmentRow from \"../../components/AppointmentRow\";\nimport { Link } from \"../../routes\";\nimport truffleContract from \"truffle-contract\";\nimport {\n  Card,\n  Button,\n  Tab,\n  Form,\n  Input,\n  Dropdown,\n  Table,\n  Message\n} from \"semantic-ui-react\";\nimport ipfs from \"../ipfs\";\nclass doctor extends Component {\n  state = {\n    appointmentIdResult: \"\",\n    appointmentIdSearch: \"\",\n    patientIdResult: \"\",\n    doctorIdresult: \"\",\n    dateResult: \"\",\n    chepComplaintResult: \"\",\n    appointmentIdForFile: \"\",\n    isCheckTrue: false,\n    buffer: \"\",\n    errorMessage: \"\",\n    loading: false,\n    patientId: \"\",\n    instancePatient: \"\",\n    appointmentListData: \"\",\n    doctorApproved: false\n  };\n\n  static async getInitialProps() {\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts[0]);\n    const factory = truffleContract(Factory);\n    factory.setProvider(web3.currentProvider);\n    const instanceFactory = await factory.deployed();\n    const doctor = truffleContract(Doctor);\n    const patient = truffleContract(Patient);\n    patient.setProvider(web3.currentProvider);\n    doctor.setProvider(web3.currentProvider);\n\n    const doctorAddress = await instanceFactory.accountToAddressDoctor.call(\n      accounts[0]\n    );\n    if (doctorAddress == 0x0000000000000000000000000000000000000000) {\n      return { doctorAddress: null };\n    } else {\n      const instanceDoctor = await doctor.at(doctorAddress);\n      const doctorId = await instanceDoctor.doctorId.call();\n      const summary = await instanceDoctor.getSummary.call(doctorId);\n\n      return {\n        patient: patient,\n        doctorAddress: doctorAddress,\n        doctor: instanceDoctor,\n        instanceFactory: instanceFactory,\n        doctorId: summary[0].toNumber(),\n        doctorName: summary[1],\n        doctorGender: summary[2],\n        qualification: summary[3],\n        account: summary[4],\n        accounts: accounts\n      };\n    }\n  }\n\n  onAppointmentIdForFile = e => {\n    const re = /^[0-9\\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      this.setState({ appointmentIdForFile: e.target.value });\n    }\n    console.log(this.state.appointmentIdForFile);\n  };\n\n  onPatientId = e => {\n    const re = /^[0-9\\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      this.setState({ patientId: e.target.value });\n    }\n  };\n  onAppointmentIdSearch = event => {\n    this.setState({ appointmentIdSearch: event.target.value });\n  };\n\n  onSearchAppointment = async event => {\n    event.preventDefault();\n    const doctor = this.props.doctor;\n    console.log(doctor);\n\n    const appointmentResult = await doctor.appointments.call(\n      parseInt(this.state.appointmentIdSearch)\n    );\n    console.log(appointmentResult);\n    this.setState({\n      appointmentIdResult: appointmentResult[0].toNumber(),\n      patientIdResult: appointmentResult[1].toNumber(),\n      doctorIdresult: appointmentResult[2].toNumber(),\n      dateResult: appointmentResult[3],\n      chepComplaintResult: appointmentResult[4]\n    });\n    this.onSearch();\n  };\n  onSearch = () => {\n    if (this.state.appointmentIdResult) {\n      return (\n        <Table singleLine>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Appointement Id</Table.HeaderCell>\n              <Table.HeaderCell>Patient Id</Table.HeaderCell>\n              <Table.HeaderCell>Doctor Id</Table.HeaderCell>\n              <Table.HeaderCell>Date</Table.HeaderCell>\n              <Table.HeaderCell>Chief Complaint</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>{this.state.appointmentIdResult}</Table.Cell>\n              <Table.Cell>{this.state.patientIdResult}</Table.Cell>\n              <Table.Cell>{this.state.doctorIdresult}</Table.Cell>\n              <Table.Cell>{this.state.dateResult}</Table.Cell>\n              <Table.Cell>{this.state.chepComplaintResult}</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      );\n    } else {\n      return <h1>No Record Found</h1>;\n    }\n  };\n\n  onAddPrescriptionSearch = async () => {\n    const { appointmentIdForFile } = this.state;\n    const doctor = this.props.doctor;\n    const appointment = await doctor.appointments.call(appointmentIdForFile);\n    const isCheckTrue = appointment[6];\n    if (appointment[0].toNumber() == 0 || isNaN(appointment[0].toNumber())) {\n      alert(\"please provide right Appointment Id\");\n    } else {\n      this.setState({\n        appointmentIdForFile: appointment[0].toNumber(),\n        isCheckTrue: isCheckTrue\n      });\n      console.log(this.state.isCheckTrue, this.state.appointmentIdForFile);\n      this.renderFile();\n    }\n  };\n\n  onSubmit = async event => {\n    try {\n      this.setState({ loading: true, errorMessage: \"\" });\n\n      console.log(this.state.appointmentIdForFile);\n      const doctor = this.props.doctor;\n      const appointment = await doctor.appointments.call(\n        this.state.appointmentIdForFile\n      );\n      const isCheckTrue = appointment[6];\n      console.log(isCheckTrue);\n      if (isCheckTrue || this.state.appointmentIdForFile == 0) {\n        return alert(\"Sorry provide valid appointment Id\");\n      } else {\n        ipfs.files.add(this.state.buffer, async (error, result) => {\n          if (error) {\n            console.error(error);\n            this.setState({ errorMessage: error.message });\n            return;\n          }\n          this.setState({ loading: false });\n\n          // const ethAddress = instance.address;\n          // this.setState({ ethAddress });\n\n          const prescription = await doctor.addPrescription(\n            this.state.appointmentIdForFile,\n            result[0].hash,\n            { from: this.props.accounts[0] }\n          );\n        });\n        const appointment = await doctor.appointments.call(\n          this.state.appointmentIdForFile\n        );\n        console.log(appointment);\n      }\n    } catch (err) {\n      console.log(error);\n      this.setState({ errorMessage: err.message });\n    }\n  };\n\n  onSumbitPatientId = async event => {\n    event.preventDefault();\n    const instanceFactory = this.props.instanceFactory;\n    const patient = this.props.patient;\n    const patientAddress = await instanceFactory.patientIdToAddress.call(\n      parseInt(this.state.patientId)\n    );\n    if (patientAddress == 0x0000000000000000000000000000000000000000) {\n      alert(\"sorry wrong patient id\");\n    }\n    const instancePatient = await patient.at(patientAddress);\n    const checkDoctorId = await instancePatient.doctorApproval.call(\n      this.props.doctorId\n    );\n\n    if (checkDoctorId) {\n      this.setState({ doctorApproved: true });\n    } else {\n      alert(\"Sorry you are not allowed to view patient record\");\n    }\n  };\n\n  captureFile = event => {\n    event.preventDefault();\n    try {\n      const file = event.target.files[0];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onloadend = () => {\n        this.setState({ buffer: Buffer(reader.result) });\n        console.log(\"buffer:\", this.state.buffer);\n      };\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n  };\n\n  renderFile = () => {\n    console.log(\"render file:\", this.state.isCheckTrue);\n    // console.log(\"address\", this.props.);\n    if (!this.state.isCheckTrue) {\n      return (\n        <div>\n          <h1>Please Add File</h1>\n          <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n            <Form.Group widths=\"equal\">\n              <Input\n                type=\"file\"\n                onChange={this.captureFile}\n                style={{\n                  width: 800,\n                  height: 40,\n                  opacity: 100\n                }}\n              />\n              <Button\n                loading={this.state.loading}\n                primary\n                icon=\"upload\"\n                label={{\n                  basic: true,\n                  content: \"upload file\"\n                }}\n                labelPosition=\"right\"\n              />\n            </Form.Group>\n            <Message error header=\"Oops..!\" content={this.state.errorMessage} />\n          </Form>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h1>already Completed</h1>\n        </div>\n      );\n    }\n  };\n\n  renderTabs() {\n    const { Header, Row, HeaderCell, Body } = Table;\n    const { patientId } = this.state;\n    const panes = [\n      {\n        menuItem: \"Add File of Visit\",\n        render: () => (\n          <Tab.Pane attached={false}>\n            <h1>Add File of Appointment</h1>\n            <h1>Search Appointment</h1>\n            <Form onSubmit={this.onAddPrescriptionSearch}>\n              <Form.Group widths=\"equal\">\n                <Form.Field>\n                  <label>Appointment Id</label>\n                  <Input\n                    value={this.state.appointmentIdForFile}\n                    onChange={this.onAppointmentIdForFile}\n                  />\n                </Form.Field>\n\n                <Button primary> Search Appointment </Button>\n              </Form.Group>\n            </Form>\n\n            {this.renderFile(\n              this.state.appointmentIdForFile,\n              this.state.isCheckTrue\n            )}\n          </Tab.Pane>\n        )\n      },\n      {\n        menuItem: \"Search Appointment\",\n        render: () => (\n          <Tab.Pane attached={false}>\n            <h1>Search Appointment</h1>\n            <Form onSubmit={this.onSearchAppointment}>\n              <Form.Group widths=\"equal\">\n                <Form.Field>\n                  <label>Appointment Id</label>\n                  <Input\n                    value={this.state.appointmentIdSearch}\n                    onChange={this.onAppointmentIdSearch}\n                  />\n                </Form.Field>\n\n                <Button primary> Search Appointment </Button>\n              </Form.Group>\n            </Form>\n            {this.onSearch()}\n          </Tab.Pane>\n        )\n      },\n      {\n        menuItem: \"View Patient Record\",\n        render: () => (\n          <Tab.Pane attached={false}>\n            <h1>View Patient Record</h1>\n            <Form onSubmit={this.onSumbitPatientId}>\n              <Form.Group widths=\"equal\">\n                <Form.Field>\n                  <label>Patient id</label>\n                  <Input\n                    value={this.state.patientId}\n                    onChange={this.onPatientId}\n                  />\n                </Form.Field>\n                <Button primary> View record </Button>\n              </Form.Group>\n            </Form>{\" \"}\n            <b>\n              {this.state.doctorApproved ? (\n                <Link route={`../doctor/patientRecord/${patientId}`}>\n                  <a>View Patient Record</a>\n                </Link>\n              ) : (\n                \"Sorry you are not allowed\"\n              )}\n            </b>\n          </Tab.Pane>\n        )\n      }\n    ];\n    return <Tab menu={{ attached: false }} panes={panes} />;\n  }\n\n  render() {\n    if (this.props.doctorAddress !== null) {\n      return (\n        <Layout>\n          <div>\n            <div\n              style={{\n                backgroundColor: \"#4267b2\",\n                color: \"white\",\n                marginTop: 10,\n                borderRadius: 4,\n                padding: 10,\n                paddingLeft: 50,\n                margin: 10,\n                fontFamily: \"Times New Roman, Times, serif\",\n                fontSize: 20\n              }}\n            >\n              <div>Doctor Id: {this.props.doctorId}</div>\n              <div> Doctor Name : {this.props.doctorName}</div>\n              <div>Gender: {this.props.doctorGender}</div>\n              <div>Qualification: {this.props.qualification}</div>\n              <div> Account: {this.props.account}</div>\n            </div>\n            {this.renderTabs()}\n          </div>\n        </Layout>\n      );\n    } else {\n      return (\n        <Layout>\n          <div style={{ color: \"red\" }}>\n            <h1>\n              You are not Registered as Doctor or you have selected wrong\n              account in metamask\n            </h1>\n          </div>\n        </Layout>\n      );\n    }\n  }\n}\nexport default doctor;\n","const IPFS = require(\"ipfs-api\");\nconst ipfs = new IPFS({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\"\n});\nexport default ipfs;\n","const routes = require(\"next-routes\")();\nroutes\n  .add(\"/hospital/\", \"/hospital/\")\n  .add(\"/hospital/register\", \"/hospital/register\")\n  .add(\"/hospital/:address\", \"/hospital/hospitalDetails\")\n  .add(\"/patient\", \"/patient\")\n  .add(\"/patient/record/:hash\", \"/patient/record\")\n  .add(\"/doctor\", \"/doctor\")\n  .add(\"/doctor/patientRecord/:patientId\", \"/doctor/patientRecord\")\n  .add(\"/doctor/record/:hash\", \"/doctor/record\");\n\nmodule.exports = routes;\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"ipfs-api\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"truffle-contract\");","module.exports = require(\"web3\");"],"mappingsxFA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAOA;AAAA;AAMA;;;;AAvBA;AACA;AAwBA;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAFA;AAKA;AACA;AAFA;AASA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AAAA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AACA;AAqDA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AADA;AAKA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAiBA;AACA;AACA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAC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","sourceRoot":""}