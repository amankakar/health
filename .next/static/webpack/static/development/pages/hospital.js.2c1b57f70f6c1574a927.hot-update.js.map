{"version":3,"file":"static/webpack/static/development/pages/hospital.js.2c1b57f70f6c1574a927.hot-update.js","sources":["webpack:///./pages/hospital.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ReceptionsitFactory from \"../build/contracts/ReceptionsitFactory.json\";\nimport Receptionist from \"../build/contracts/Receptionsit.json\";\nimport { Form, Button, Input, Message, Card } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nimport web3 from \"../ethereum/web3\";\nimport truffleContract from \"truffle-contract\";\nimport Layout from \"../components/Layout\";\nimport instanceFactoryFile from \"../ethereum/receptionFactory\";\nclass index extends Component {\n  state = {\n    web3: null,\n    accounts: null,\n    hospitalName: \"\",\n    receptionistName: \"\",\n    instanceFactory1: \"\",\n    receptionistInstance: \"\",\n    recetionistAddress: \"\",\n    instanceFactory: \"\",\n    receptionist: \"\",\n    receptionList: []\n  };\n\n  static async getInitialProps() {\n    //const web3 = await getWeb3();\n    console.log(\"web3\", web3.version);\n    const accounts = await web3.eth.getAccounts();\n\n    //this.setState({ web3, accounts });\n    const Contract = truffleContract(ReceptionsitFactory);\n    Contract.setProvider(web3.currentProvider);\n    console.log(\"accounts\", accounts);\n    const instanceFactory = await Contract.deployed();\n    console.log(\"Address:\", instanceFactory);\n    const hospitalAddress = await instanceFactory.accountToAddress.call(\n      accounts[0]\n    );\n    console.log(accounts);\n    if (hospitalAddress == 0x0000000000000000000000000000000000000000) {\n      return { noAddress: null };\n    } else {\n      const receptionCount = await instanceFactory.getReceptionList.call();\n      console.log(\"List of :\", receptionCount);\n      const receptionist = await Promise.all(\n        Array(parseInt(receptionCount))\n          .fill()\n          .map((element, index) => {\n            return instanceFactory.receptionSummary.call(index);\n          })\n      );\n      console.log(\"Receptionist Array\", receptionist[0]);\n\n      return { receptionist };\n    }\n  }\n\n  renderHospitals() {\n    console.log(\"BRFORE:\", this.props.receptionist);\n    const items = this.props.receptionist.map((element, index) => {\n      const address = element[3];\n      return {\n        header: \"Hospital Name:  \" + element[0],\n        description: \"Admin Name:  \" + element[1],\n        meta: \"Account of Admin:  \" + element[2],\n\n        extra: (\n          <Link route={`hospital/${address}`}>\n            <a color=\"blue\">Visit Hospital</a>\n          </Link>\n        ),\n        fluid: true\n      };\n    });\n    console.log(\"Lenght\", this.props.receptionist);\n\n    return (\n      <Card.Group\n        items={items}\n        style={{\n          color: \"black\",\n          marginTop: 10,\n          borderRadius: 4,\n          margin: 10,\n          fontFamily: \"Times New Roman, Times, serif\",\n          fontSize: 20\n        }}\n      />\n    );\n  }\n\n  render() {\n    if (this.props.noAddress === null) {\n      return (\n        <Layout>\n          <div style={{ color: \"red\" }}>\n            <h1>\n              You are not Registered as Hospital Admin or you have selected\n              wrong account in metamask\n            </h1>\n          </div>\n        </Layout>\n      );\n    } else {\n      return (\n        <Layout>\n          <div>\n            <Link route=\"hospital/register\">\n              <a>\n                <Button\n                  floated=\"right\"\n                  primary\n                  content=\"Register New Admin/Receptionist\"\n                  icon=\"add circle\"\n                  labelPosition=\"left\"\n                />\n              </a>\n            </Link>\n            <div style={{ marginLeft: 300 }}>\n              <h2>List Of All Registered Hospitals</h2>\n            </div>{\" \"}\n          </div>\n          <hr />\n          <div>{this.renderHospitals()}</div>\n        </Layout>\n      );\n    }\n  }\n}\nexport default index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AAVA;AAYA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAYA;;;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAQA;AACA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAAA;AAAA;AAQA;AACA;;;;;;;;;;;;AAtGA;AACA;;AACA;AACA;;AADA;AAEA;AACA;AACA;AACA;;AACA;AACA;;AADA;AACA;;AACA;AACA;;AADA;AAGA;AACA;AAAA;;;;;AACA;AAAA;AAAA;AACA;;;AACA;AACA;;AADA;AACA;;AACA;AAIA;AACA;AACA;;AANA;AAOA;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AA5CA;AACA;AAsHA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}