{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from \"react\";\nimport ReceptionsitFactory from \"../build/contracts/ReceptionsitFactory.json\";\nimport Receptionist from \"../build/contracts/Receptionsit.json\";\nimport { Form, Button, Input, Message, Card } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nimport web3 from \"../ethereum/web3\";\nimport truffleContract from \"truffle-contract\";\nimport Layout from \"../components/Layout\";\nimport instanceFactoryFile from \"../ethereum/receptionFactory\";\n\nvar index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(index, _Component);\n\n  function index() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(index)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      web3: null,\n      accounts: null,\n      hospitalName: \"\",\n      receptionistName: \"\",\n      instanceFactory1: \"\",\n      receptionistInstance: \"\",\n      recetionistAddress: \"\",\n      instanceFactory: \"\",\n      receptionist: \"\",\n      receptionList: []\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var _this$state, web3, instanceFactory1, instanceFactory, accounts, rec;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _this$state = _this.state, web3 = _this$state.web3, instanceFactory1 = _this$state.instanceFactory1, instanceFactory = _this$state.instanceFactory;\n                _context.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context.sent;\n                console.log(web3, accounts, instanceFactory1, instanceFactory);\n                _context.next = 8;\n                return instanceFactory.createReceptionist(_this.state.hospitalName, _this.state.receptionistName, {\n                  from: accounts[0]\n                });\n\n              case 8:\n                rec = _context.sent;\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onHospitalHandle\", function (event) {\n      _this.setState({\n        hospitalName: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onReceptionistHandle\", function (event) {\n      _this.setState({\n        receptionistName: event.target.value\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"renderHospitals\",\n    value: function renderHospitals() {\n      console.log(\"BRFORE:\", this.props.receptionist);\n      var items = this.props.receptionist.map(function (element, index) {\n        var address = element[3];\n        return {\n          header: \"Hospital Name:  \" + element[0],\n          description: \"Admin Name:  \" + element[1],\n          meta: \"Account of Admin:  \" + element[2],\n          extra: React.createElement(Link, {\n            route: \"hospital/\".concat(address)\n          }, React.createElement(\"a\", {\n            color: \"blue\"\n          }, \"Visit Hospital\")),\n          fluid: true\n        };\n      });\n      console.log(\"Lenght\", this.props.receptionist);\n      return React.createElement(Card.Group, {\n        items: items,\n        style: {\n          color: \"black\",\n          marginTop: 10,\n          borderRadius: 4,\n          margin: 10,\n          fontFamily: \"Times New Roman, Times, serif\",\n          fontSize: 20\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(\"div\", null, React.createElement(Link, {\n        route: \"hospital/register\"\n      }, React.createElement(\"a\", null, React.createElement(Button, {\n        floated: \"right\",\n        primary: true,\n        content: \"Register New Admin/Receptionist\",\n        icon: \"add circle\",\n        labelPosition: \"left\"\n      }))), React.createElement(\"div\", {\n        style: {\n          marginLeft: 300\n        }\n      }, React.createElement(\"h2\", null, \"List Of All Registered Hospitals\")), \" \"), React.createElement(\"hr\", null), React.createElement(\"div\", null, this.renderHospitals(), \";\"), React.createElement(Link, {\n        route: \"/patient/\"\n      }, React.createElement(\"a\", null, \"this is link to patient/index.js page\")), React.createElement(Link, {\n        route: \"/doctor\"\n      }, React.createElement(\"a\", null, \"Doctor Page Link\")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var accounts, Contract, instanceFactory, receptionCount, receptionist;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                //const web3 = await getWeb3();\n                console.log(\"web3\", web3.version);\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                //this.setState({ web3, accounts });\n                Contract = truffleContract(ReceptionsitFactory);\n                Contract.setProvider(web3.currentProvider);\n                _context2.next = 8;\n                return Contract.deployed();\n\n              case 8:\n                instanceFactory = _context2.sent;\n                console.log(\"Address:\", instanceFactory);\n                _context2.next = 12;\n                return instanceFactory.getReceptionList.call();\n\n              case 12:\n                receptionCount = _context2.sent;\n                console.log(\"List of :\", receptionCount);\n                _context2.next = 16;\n                return _Promise.all(Array(_parseInt(receptionCount)).fill().map(function (element, index) {\n                  return instanceFactory.receptionSummary.call(index);\n                }));\n\n              case 16:\n                receptionist = _context2.sent;\n                console.log(\"Receptionist Array\", receptionist[0]);\n                return _context2.abrupt(\"return\", {\n                  receptionist: receptionist\n                });\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return index;\n}(Component);\n\nexport default index;","map":{"version":3,"sources":["/home/aman/Downloads/Compressed/health-care-master/pages/index.js"],"names":["React","Component","ReceptionsitFactory","Receptionist","Form","Button","Input","Message","Card","Link","web3","truffleContract","Layout","instanceFactoryFile","index","accounts","hospitalName","receptionistName","instanceFactory1","receptionistInstance","recetionistAddress","instanceFactory","receptionist","receptionList","event","preventDefault","state","eth","getAccounts","console","log","createReceptionist","from","rec","setState","target","value","props","items","map","element","address","header","description","meta","extra","fluid","color","marginTop","borderRadius","margin","fontFamily","fontSize","marginLeft","renderHospitals","version","Contract","setProvider","currentProvider","deployed","getReceptionList","call","receptionCount","all","Array","fill","receptionSummary"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReceptionsitFactory from \"../build/contracts/ReceptionsitFactory.json\";\nimport Receptionist from \"../build/contracts/Receptionsit.json\";\nimport { Form, Button, Input, Message, Card } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nimport web3 from \"../ethereum/web3\";\nimport truffleContract from \"truffle-contract\";\nimport Layout from \"../components/Layout\";\nimport instanceFactoryFile from \"../ethereum/receptionFactory\";\nclass index extends Component {\n  state = {\n    web3: null,\n    accounts: null,\n    hospitalName: \"\",\n    receptionistName: \"\",\n    instanceFactory1: \"\",\n    receptionistInstance: \"\",\n    recetionistAddress: \"\",\n    instanceFactory: \"\",\n    receptionist: \"\",\n    receptionList: []\n  };\n\n  static async getInitialProps() {\n    //const web3 = await getWeb3();\n    console.log(\"web3\", web3.version);\n    const accounts = await web3.eth.getAccounts();\n\n    //this.setState({ web3, accounts });\n    const Contract = truffleContract(ReceptionsitFactory);\n    Contract.setProvider(web3.currentProvider);\n\n    const instanceFactory = await Contract.deployed();\n    console.log(\"Address:\", instanceFactory);\n    const receptionCount = await instanceFactory.getReceptionList.call();\n    console.log(\"List of :\", receptionCount);\n    const receptionist = await Promise.all(\n      Array(parseInt(receptionCount))\n        .fill()\n        .map((element, index) => {\n          return instanceFactory.receptionSummary.call(index);\n        })\n    );\n    console.log(\"Receptionist Array\", receptionist[0]);\n\n    return { receptionist };\n  }\n\n  renderHospitals() {\n    console.log(\"BRFORE:\", this.props.receptionist);\n    const items = this.props.receptionist.map((element, index) => {\n      const address = element[3];\n      return {\n        header: \"Hospital Name:  \" + element[0],\n        description: \"Admin Name:  \" + element[1],\n        meta: \"Account of Admin:  \" + element[2],\n\n        extra: (\n          <Link route={`hospital/${address}`}>\n            <a color=\"blue\">Visit Hospital</a>\n          </Link>\n        ),\n        fluid: true\n      };\n    });\n    console.log(\"Lenght\", this.props.receptionist);\n\n    return (\n      <Card.Group\n        items={items}\n        style={{\n          color: \"black\",\n          marginTop: 10,\n          borderRadius: 4,\n          margin: 10,\n          fontFamily: \"Times New Roman, Times, serif\",\n          fontSize: 20\n        }}\n      />\n    );\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    const { web3, instanceFactory1, instanceFactory } = this.state;\n    const accounts = await web3.eth.getAccounts();\n    console.log(web3, accounts, instanceFactory1, instanceFactory);\n\n    const rec = await instanceFactory.createReceptionist(\n      this.state.hospitalName,\n      this.state.receptionistName,\n      {\n        from: accounts[0]\n      }\n    );\n  };\n\n  onHospitalHandle = event => {\n    this.setState({ hospitalName: event.target.value });\n  };\n  onReceptionistHandle = event => {\n    this.setState({ receptionistName: event.target.value });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <Link route=\"hospital/register\">\n            <a>\n              <Button\n                floated=\"right\"\n                primary\n                content=\"Register New Admin/Receptionist\"\n                icon=\"add circle\"\n                labelPosition=\"left\"\n              />\n            </a>\n          </Link>\n          <div style={{ marginLeft: 300 }}>\n            <h2>List Of All Registered Hospitals</h2>\n          </div>{\" \"}\n        </div>\n        <hr />\n        <div>{this.renderHospitals()};</div>\n        <Link route=\"/patient/\">\n          <a>this is link to patient/index.js page</a>\n        </Link>\n\n        <Link route=\"/doctor\">\n          <a>Doctor Page Link</a>\n        </Link>\n      </Layout>\n    );\n  }\n}\nexport default index;\n"]},"metadata":{},"sourceType":"module"}