{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport Web3 from \"web3\";\n\nvar getWeb3 = function getWeb3() {\n  return new _Promise(function (resolve, reject) {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, _web, provider, _web2;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context.next = 13;\n                break;\n              }\n\n              web3 = new Web3(window.ethereum);\n              _context.prev = 2;\n              _context.next = 5;\n              return window.ethereum.enable();\n\n            case 5:\n              // Acccounts now exposed\n              resolve(web3);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              reject(_context.t0);\n\n            case 11:\n              _context.next = 14;\n              break;\n\n            case 13:\n              // Legacy dapp browsers...\n              if (window.web3) {\n                // Use Mist/MetaMask's provider.\n                _web = window.web3;\n                console.log(\"Injected web3 detected.\");\n                resolve(_web);\n              } // Fallback to localhost; use dev console port by default...\n              else {\n                  provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\n                  _web2 = new Web3(provider);\n                  console.log(\"No web3 instance injected, using Local web3.\");\n                  resolve(_web2);\n                }\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[2, 8]]);\n    })));\n  });\n};\n\nexport default getWeb3;","map":null,"metadata":{},"sourceType":"module"}