"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var react_dom_1 = __importDefault(require("react-dom"));
var head_manager_1 = __importDefault(require("./head-manager"));
var router_1 = require("next/router");
var mitt_1 = __importDefault(require("next-server/dist/lib/mitt"));
var utils_1 = require("next-server/dist/lib/utils");
var page_loader_1 = __importDefault(require("./page-loader"));
var envConfig = __importStar(require("next-server/config"));
var error_boundary_1 = __importDefault(require("./error-boundary"));
var loadable_1 = __importDefault(require("next-server/dist/lib/loadable"));
var head_manager_context_1 = require("next-server/dist/lib/head-manager-context");
// Polyfill Promise globally
// This is needed because Webpack's dynamic loading(common chunks) code
// depends on Promise.
// So, we need to polyfill it.
// See: https://webpack.js.org/guides/code-splitting/#dynamic-imports
if (!window.Promise) {
    window.Promise = Promise;
}
var data = JSON.parse(document.getElementById('__NEXT_DATA__').textContent);
window.__NEXT_DATA__ = data;
var props = data.props, err = data.err, page = data.page, query = data.query, buildId = data.buildId, assetPrefix = data.assetPrefix, runtimeConfig = data.runtimeConfig, dynamicIds = data.dynamicIds;
var prefix = assetPrefix || '';
// With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time
// So, this is how we do it in the client side at runtime
__webpack_public_path__ = prefix + "/_next/"; //eslint-disable-line
// Initialize next/config with the environment configuration
envConfig.setConfig({
    serverRuntimeConfig: {},
    publicRuntimeConfig: runtimeConfig
});
var asPath = utils_1.getURL();
var pageLoader = new page_loader_1.default(buildId, prefix);
var register = function (_a) {
    var r = _a[0], f = _a[1];
    return pageLoader.registerPage(r, f);
};
if (window.__NEXT_P) {
    window.__NEXT_P.map(register);
}
window.__NEXT_P = [];
window.__NEXT_P.push = register;
var headManager = new head_manager_1.default();
var appContainer = document.getElementById('__next');
var lastAppProps;
var webpackHMR;
var Component;
var App;
exports.emitter = mitt_1.default();
exports.default = (function (_a) {
    var passedWebpackHMR = (_a === void 0 ? {} : _a).webpackHMR;
    return __awaiter(_this, void 0, void 0, function () {
        var initialErr, isValidElementType, error_1;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    // This makes sure this specific line is removed in production
                    if (process.env.NODE_ENV === 'development') {
                        webpackHMR = passedWebpackHMR;
                    }
                    return [4 /*yield*/, pageLoader.loadPage('/_error')];
                case 1:
                    exports.ErrorComponent = _b.sent();
                    return [4 /*yield*/, pageLoader.loadPage('/_app')];
                case 2:
                    App = _b.sent();
                    initialErr = err;
                    _b.label = 3;
                case 3:
                    _b.trys.push([3, 5, , 6]);
                    return [4 /*yield*/, pageLoader.loadPage(page)];
                case 4:
                    Component = _b.sent();
                    if (process.env.NODE_ENV !== 'production') {
                        isValidElementType = require('react-is').isValidElementType;
                        if (!isValidElementType(Component)) {
                            throw new Error("The default export is not a React Component in page: \"" + page + "\"");
                        }
                    }
                    return [3 /*break*/, 6];
                case 5:
                    error_1 = _b.sent();
                    // This catches errors like throwing in the top level of a module
                    initialErr = error_1;
                    return [3 /*break*/, 6];
                case 6: return [4 /*yield*/, loadable_1.default.preloadReady(dynamicIds || [])];
                case 7:
                    _b.sent();
                    exports.router = router_1.createRouter(page, query, asPath, {
                        initialProps: props,
                        pageLoader: pageLoader,
                        App: App,
                        Component: Component,
                        ErrorComponent: exports.ErrorComponent,
                        err: initialErr
                    });
                    exports.router.subscribe(function (_a) {
                        var App = _a.App, Component = _a.Component, props = _a.props, err = _a.err;
                        render({ App: App, Component: Component, props: props, err: err, emitter: exports.emitter });
                    });
                    render({ App: App, Component: Component, props: props, err: initialErr, emitter: exports.emitter });
                    return [2 /*return*/, exports.emitter];
            }
        });
    });
});
function render(props) {
    return __awaiter(this, void 0, void 0, function () {
        var err_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!props.err) return [3 /*break*/, 2];
                    return [4 /*yield*/, renderError(props)];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
                case 2:
                    _a.trys.push([2, 4, , 6]);
                    return [4 /*yield*/, doRender(props)];
                case 3:
                    _a.sent();
                    return [3 /*break*/, 6];
                case 4:
                    err_1 = _a.sent();
                    return [4 /*yield*/, renderError(__assign({}, props, { err: err_1 }))];
                case 5:
                    _a.sent();
                    return [3 /*break*/, 6];
                case 6: return [2 /*return*/];
            }
        });
    });
}
exports.render = render;
// This method handles all runtime and debug errors.
// 404 and 500 errors are special kind of errors
// and they are still handle via the main render method.
function renderError(props) {
    return __awaiter(this, void 0, void 0, function () {
        var App, err, initProps, _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    App = props.App, err = props.err;
                    if (process.env.NODE_ENV !== 'production') {
                        throw webpackHMR.prepareError(err);
                    }
                    // Make sure we log the error to the console, otherwise users can't track down issues.
                    console.error(err);
                    if (!props.props) return [3 /*break*/, 1];
                    _a = props.props;
                    return [3 /*break*/, 3];
                case 1: return [4 /*yield*/, utils_1.loadGetInitialProps(App, { Component: exports.ErrorComponent, router: exports.router, ctx: { err: err, pathname: page, query: query, asPath: asPath } })];
                case 2:
                    _a = _b.sent();
                    _b.label = 3;
                case 3:
                    initProps = _a;
                    return [4 /*yield*/, doRender(__assign({}, props, { err: err, Component: exports.ErrorComponent, props: initProps }))];
                case 4:
                    _b.sent();
                    return [2 /*return*/];
            }
        });
    });
}
exports.renderError = renderError;
var isInitialRender = true;
function renderReactElement(reactEl, domEl) {
    // The check for `.hydrate` is there to support React alternatives like preact
    if (isInitialRender && typeof react_dom_1.default.hydrate === 'function') {
        react_dom_1.default.hydrate(reactEl, domEl);
        isInitialRender = false;
    }
    else {
        react_dom_1.default.render(reactEl, domEl);
    }
}
function doRender(_a) {
    var App = _a.App, Component = _a.Component, props = _a.props, err = _a.err, _b = _a.emitter, emitterProp = _b === void 0 ? exports.emitter : _b;
    return __awaiter(this, void 0, void 0, function () {
        var pathname, query_1, asPath_1, appProps, onError;
        var _this = this;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    if (!(!props && Component &&
                        Component !== exports.ErrorComponent &&
                        lastAppProps.Component === exports.ErrorComponent)) return [3 /*break*/, 2];
                    pathname = exports.router.pathname, query_1 = exports.router.query, asPath_1 = exports.router.asPath;
                    return [4 /*yield*/, utils_1.loadGetInitialProps(App, { Component: Component, router: exports.router, ctx: { err: err, pathname: pathname, query: query_1, asPath: asPath_1 } })];
                case 1:
                    props = _c.sent();
                    _c.label = 2;
                case 2:
                    Component = Component || lastAppProps.Component;
                    props = props || lastAppProps.props;
                    appProps = __assign({ Component: Component, err: err, router: exports.router, headManager: headManager }, props);
                    // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.
                    lastAppProps = appProps;
                    emitterProp.emit('before-reactdom-render', { Component: Component, ErrorComponent: exports.ErrorComponent, appProps: appProps });
                    // In development runtime errors are caught by react-error-overlay.
                    if (process.env.NODE_ENV === 'development') {
                        renderReactElement((react_1.default.createElement(head_manager_context_1.HeadManagerContext.Provider, { value: headManager },
                            react_1.default.createElement(App, __assign({}, appProps)))), appContainer);
                    }
                    else {
                        onError = function (error) { return __awaiter(_this, void 0, void 0, function () {
                            var err_2;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        _a.trys.push([0, 2, , 3]);
                                        return [4 /*yield*/, renderError({ App: App, err: error })];
                                    case 1:
                                        _a.sent();
                                        return [3 /*break*/, 3];
                                    case 2:
                                        err_2 = _a.sent();
                                        console.error('Error while rendering error page: ', err_2);
                                        return [3 /*break*/, 3];
                                    case 3: return [2 /*return*/];
                                }
                            });
                        }); };
                        renderReactElement((react_1.default.createElement(error_boundary_1.default, { onError: onError },
                            react_1.default.createElement(head_manager_context_1.HeadManagerContext.Provider, { value: headManager },
                                react_1.default.createElement(App, __assign({}, appProps))))), appContainer);
                    }
                    emitterProp.emit('after-reactdom-render', { Component: Component, ErrorComponent: exports.ErrorComponent, appProps: appProps });
                    return [2 /*return*/];
            }
        });
    });
}
